package de.od2n.neo4j.ext.dbcs.bookings;

public enum BookingLabel {
	
	/**
	 * Distanz-Arten
	 * SHORT_
	 * MIDDLE_
	 * LONG_
	 */

	SHORT_DISTANCE(10000003, "SHORT_DISTANCE", 10000000), 
	MIDDLE_DISTANCE(10000002, "MIDDLE_DISTANCE", 10000000), 
	LONG_DISTANCE(10000001, "LONG_DISTANCE", 10000000), 
	
	/**
	 * Hersteller:
	 * ['CITROËN', 'FIAT', 'FORD', 'MCC', 'MERCEDES', 'MITSUBISHI', 'NISSAN', 'OPEL', 'PEUGEOT', 'RENAULT', 'TOYOTA', 'VW']
	 * und 
	 * 'UNKNOWN_VM'
	 
	
	UNKNOWN_VM(1000016, "UNKNOWN_VM", 1000000), 
	FORD(1000015, "FIAT", 1000000), 
	CITROËN(1000014, "CITROËN", 1000000), 
	FIAT(1000013, "FIAT", 1000000), 
	MCC(1000012, "MCC", 1000000), 
	MERCEDES(1000011, "MERCEDES", 1000000),
	MITSUBISHI(1000010, "MITSUBISHI", 1000000),
	NISSAN(1000006, "NISSAN", 1000000),
	OPEL(1000005, "OPEL", 1000000),
	PEUGEOT(1000004, "PEUGEOT", 1000000),
	RENAULT(1000003, "RENAULT", 1000000),
	TOYOTA(1000002, "TOYOTA", 1000000),
	VW(1000001, "VW", 1000000),
	*/
	
	/**
	 * Income Gruppen
	 * ['DB' 'UNKNOWN_TICHG' 'BWCARSHARING' 'MULTICITY' 'FORD2GO' 'FLINKSTER'
 'EINFACHMOBIL' 'TEILAUTO' 'SCOUTER255' 'BWFPS' 'BOOK-N-DRIVE' 'FORDPASS'
 'EMIL' 'S_SERVICECARD']
	 */	
	
	UNKNOWN_TICHG(100015, "UNKNOWN_TICHG", 100000), 
	DB(100014, "DB", 100000), 
	BWCARSHARING(100013, "BWCARSHARING", 100000), 
	MULTICITY(100012, "MULTICITY", 100000), 
	FORD2GO(100010, "FORD2GO", 100000),
	FLINKSTER(100009, "FLINKSTER", 100000),
	EINFACHMOBIL(100008, "EINFACHMOBIL", 100000),
	TEILAUTO(100007, "TEILAUTO", 100000),
	SCOUTER255(100006, "SCOUTER255", 100000),
	BWFPS(100005, "BWFPS", 100000),
	BOOK_N_DRIVE(100004, "BOOK_N_DRIVE", 100000),
	FORDPASS(100003, "FORDPASS", 100000),
	EMIL(100002, "EMIL", 100000),
	S_SERVICECARD(100001, "S_SERVICECARD", 100000),
	
	/**
	 * Income Typen
	 * ['INTERNET' 'UNKNOWN_TICHT' 'APP' 'RENTALZONE' 'MOBILITY']
	 */
	
	UNKNOWN_TICHT(10004, "UNKNOWN_TICHT", 10000), 
	INTERNET(10003, "INTERNET", 10000), 
	APP(10002, "APP", 10000), 
	MOBILITY(10001,	 "MOBILITY", 10000), 
	
	/**
	 * Haupt-Kategorien
	 * ['KLEINKLASSE', 'KOMFORTKLASSE', 'KOMPAKTKLASSE', 'MINI', 'MINIKLASSE', 'MITTELKLASSE', 'OBERKLASSE', 
	 * 'SONDERKLASSE', 'TRANSPORT', 'VAN_BUSKLASSE', 'VERSICHERUNG', 'WERBEKLASSE', 'ZUBEHÖR']
	 * und
	 * 'UNKNOWN_PCAT'
	 */
	
	UNKNOWN_PCAT(1014, "UNKNOWN_PCAT", 1000), 
	KLEINKLASSE(1013, "KLEINKLASSE", 1000), 
	KOMFORTKLASSE(1012, "KOMFORTKLASSE", 1000), 
	KOMPAKTKLASSE(1011, "KOMPAKTKLASSE", 1000), 
	MINI(1010, "MINI", 1000), 
	MINIKLASSE(1009, "MINIKLASSE", 1000), 
	MITTELKLASSE(1008, "MITTELKLASSE", 1000),
	OBERKLASSE(1007, "OBERKLASSE", 1000),
	SONDERKLASSE(1006, "SONDERKLASSE", 1000),
	TRANSPORT(1005, "TRANSPORT", 1000),
	VAN_BUSKLASSE(1004, "VAN_BUSKLASSE", 1000),
	VERSICHERUNG(1003, "VERSICHERUNG", 1000),
	WERBEKLASSE(1002, "WERBEKLASSE", 1000),
	ZUBEHÖR(1001, "ZUBEHÖR", 1000),
	
	
	BOOKING(101, "BOOKING", 100),
	
	NOTSUPPORTED(-1, "NOTSUPPORTED ", 0);

	private final int number;
	private final String description;
	private final long weight;

	public String getDescription() {
		return this.description;
	}

	public int getNumber() {
		return this.number;
	}

	public long getWeight() {
		return this.weight;
	}

	BookingLabel(int number, String description, long weight) {
    this.number = number;
    this.description = description;
    this.weight = weight;
  }

}
